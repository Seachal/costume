<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="costumetrade.order.mapper.SpUnitMapper">
  <resultMap id="BaseResultMap" type="costumetrade.order.domain.SpUnit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="storeId" jdbcType="INTEGER" property="storeId" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, unit, create_time, storeId, create_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sp_punit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getUnits"  resultMap="BaseResultMap">
    select 
    id, unit,storeId
    from sp_punit
    where storeId = #{storeId,jdbcType=INTEGER}

  </select>
  
   <select id="getSpUnitByName"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sp_punit
    where storeId = #{storeId,jdbcType=INTEGER}
    and unit = #{unit,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="List">
    delete from sp_punit
    where id in <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">#{item,jdbcType=INTEGER}</foreach>
  </delete>
  <insert id="insert" parameterType="costumetrade.order.domain.SpUnit" useGeneratedKeys="true" keyProperty="id">
    insert into sp_punit (unit, create_time, 
      storeId, create_by)
    values (#{unit,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{storeId,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="costumetrade.order.domain.SpUnit">
    insert into sp_punit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="storeId != null">
        storeId,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="costumetrade.order.domain.SpUnit">
    update sp_punit
    <set>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeId != null">
        storeId = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="costumetrade.order.domain.SpUnit">
    update sp_punit
    set unit = #{unit,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      storeId = #{storeId,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
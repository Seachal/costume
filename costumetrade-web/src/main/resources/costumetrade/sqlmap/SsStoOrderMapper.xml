<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="costumetrade.order.mapper.SsStoOrderMapper">
	<resultMap id="BaseResultMap" type="costumetrade.order.domain.SsStoOrder">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="sellerStoreId" jdbcType="INTEGER" property="sellerstoreid" />
		<result column="buyerStoreId" jdbcType="INTEGER" property="buyerstoreid" />
		<result column="buyer" jdbcType="VARCHAR" property="buyer" />
		<result column="seller" jdbcType="VARCHAR" property="seller" />
		<result column="operator" jdbcType="VARCHAR" property="operator" />
		<result column="payOrderNo" jdbcType="VARCHAR" property="payorderno" />
		<result column="refundDate" jdbcType="TIMESTAMP" property="refunddate" />
		<result column="relatedOutTradeNo" jdbcType="VARCHAR" property="relatedouttradeno" />
		<result column="refundStatus" jdbcType="VARCHAR" property="refundstatus" />
		<result column="orderType" jdbcType="VARCHAR" property="ordertype" />
		<result column="orderStatus" jdbcType="INTEGER" property="orderstatus" />
		<result column="shipType" jdbcType="INTEGER" property="shiptype" />
		<result column="shipStatus" jdbcType="INTEGER" property="shipstatus" />
		<result column="shipContact" jdbcType="VARCHAR" property="shipcontact" />
		<result column="shipPhone" jdbcType="VARCHAR" property="shipphone" />
		<result column="shipAddress" jdbcType="VARCHAR" property="shipaddress" />
		<result column="contactStoreId" jdbcType="VARCHAR" property="contactstoreid" />
		<result column="logisticsCode" jdbcType="VARCHAR" property="logisticsCode" />
		<result column="remarks" jdbcType="VARCHAR" property="remarks" />
		<result column="totalNum" jdbcType="DECIMAL" property="totalnum" />
		<result column="totalAmt" jdbcType="DECIMAL" property="totalamt" />
		<result column="discountRatio" jdbcType="INTEGER" property="discountratio" />
		<result column="discount" jdbcType="DECIMAL" property="discount" />
		<result column="mchange" jdbcType="DECIMAL" property="mchange" />
		<result column="tax" jdbcType="DECIMAL" property="tax" />
		<result column="realcost" jdbcType="DECIMAL" property="realcost" />
		<result column="payCate1" jdbcType="VARCHAR" property="paycate1" />
		<result column="payCost1" jdbcType="DECIMAL" property="paycost1" />
		<result column="payCate2" jdbcType="VARCHAR" property="paycate2" />
		<result column="payCost2" jdbcType="DECIMAL" property="paycost2" />
		<result column="freight" jdbcType="DECIMAL" property="freight" />
		<result column="debetAmt" jdbcType="DECIMAL" property="debetamt" />
		<result column="orderTime" jdbcType="TIMESTAMP" property="ordertime" />
		<result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="createBy" jdbcType="VARCHAR" property="createby" />
		<result column="modifyTime" jdbcType="TIMESTAMP" property="modifytime" />
		<result column="modifyBy" jdbcType="VARCHAR" property="modifyby" />
	</resultMap>
	<resultMap id="CountResultMap" type="costumetrade.order.domain.SsStoOrder">
		<result column="count" jdbcType="INTEGER" property="count" />
		<result column="sellerStoreId" jdbcType="INTEGER" property="sellerstoreid" />
		<result column="buyerStoreId" jdbcType="INTEGER" property="buyerstoreid" />
		<result column="orderStatus" jdbcType="INTEGER" property="orderstatus" />
	</resultMap>
	<resultMap id="AccountResultMap" type="costumetrade.order.query.OrderQuery">
		<result column="begining" jdbcType="VARCHAR" property="begining" />
		<result column="receivable" jdbcType="DECIMAL" property="receivable" />
		<result column="payable" jdbcType="DECIMAL" property="payable" />
	</resultMap>
	<sql id="Base_Column_List">
		id, sellerStoreId, buyerStoreId,seller,buyer, operator,
		payOrderNo, refundDate,
		relatedOutTradeNo,logisticsCode,
		refundStatus, orderType,
		orderStatus, shipType, shipStatus, shipContact, shipPhone,
		shipAddress, contactStoreId, remarks, totalNum, totalAmt,
		discountRatio, discount,
		mchange, tax, realcost, payCate1, payCost1,
		payCate2, payCost2, debetAmt,freight,
		orderTime,
		createTime, createBy,
		modifyTime, modifyBy
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ss_stoorder
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectSupplierByProduct" parameterType="costumetrade.order.domain.SpProduct"
		resultType="costumetrade.order.domain.SsStoOrder">
		SELECT MAX(d.createTime) as
		createTime,s.sellerStoreId,s.buyerStoreId
		FROM ss_stodetail_#{storeId}
		d
		LEFT JOIN ss_stoorder_#{storeId} s ON
		s.payOrderNo = d.orderId
		WHERE
		d.productId=#{id}
	</select>
	<!-- 查询普通用户的采购单 -->
	<select id="selectByOrderMemberCount" resultMap="CountResultMap">
		SELECT COUNT(1)
		as count,s.orderStatus,s.buyerStoreId,s.sellerStoreId
		FROM
		ss_member_stoorder s
		GROUP BY
		s.orderStatus,s.buyerStoreId,s.sellerStoreId
	</select>
	<select id="selectByOrderMember" resultMap="BaseResultMap">
		select
		stoorder.id, stoorder.sellerStoreId,
		stoorder.buyerStoreId,store.name as seller,u.name as buyer,
		stoorder.operator, stoorder.payOrderNo, stoorder.refundDate,
		stoorder.relatedOutTradeNo,
		stoorder.refundStatus, stoorder.orderType,
		stoorder.orderStatus,
		stoorder.contactStoreId, stoorder.remarks,
		stoorder.totalNum, stoorder.totalAmt,
		stoorder.discountRatio,
		stoorder.discount,
		stoorder.mchange,
		stoorder.tax, stoorder.realcost,
		stoorder.payCate1, stoorder.payCost1,
		stoorder.payCate2,
		stoorder.payCost2, stoorder.debetAmt,
		stoorder.freight,
		stoorder.logisticsCode,
		stoorder.orderTime
		from
		ss_member_stoorder stoorder
		LEFT JOIN
		sc_wechat_bind wechat ON
		wechat.userId = stoorder.buyerStoreId
		LEFT
		JOIN sp_user u ON
		u.id=wechat.userId
		LEFT JOIN sp_store store ON
		store.id =
		stoorder.sellerStoreId
		where 1=1
		<if test="spStoOrder.ordertype != null">
			and stoorder.orderType =
			#{spStoOrder.ordertype,jdbcType=VARCHAR}
		</if>
		<if test="spStoOrder.payorderno != null">
			and stoorder.payOrderNo =
			#{spStoOrder.payorderno,jdbcType=VARCHAR}
		</if>
		<if test="spStoOrder.buyerstoreid != null">
			and stoorder.buyerStoreId
			=#{spStoOrder.buyerstoreid,jdbcType=INTEGER}
		</if>
		<if test="spStoOrder.status != null">
			and stoorder.orderStatus in
			<foreach collection="spStoOrder.status" item="item" index="index"
				separator="," open="(" close=")">#{item,jdbcType=INTEGER}</foreach>
		</if>
		<if test="page!=null">
			LIMIT #{page.startRow},#{page.pageSize}
		</if>
	</select>
	<!-- 查询店家的采购单或者销售单 -->
	<select id="selectByOrderStoreCount" parameterType="java.lang.Integer"
		resultMap="CountResultMap">
		SELECT COUNT(1) as
		count,s.orderStatus,s.buyerStoreId,s.sellerStoreId
		FROM
		ss_stoorder_#{storeId,jdbcType=INTEGER} s
		GROUP BY
		s.orderStatus,s.buyerStoreId,s.sellerStoreId
	</select>

	<select id="selectByOrderStore" resultMap="BaseResultMap">
		SELECT
		stoorder.id, stoorder.sellerStoreId,
		stoorder.buyerStoreId,store.name AS seller,store1.name AS buyer,
		stoorder.operator, stoorder.payOrderNo, stoorder.refundDate,
		stoorder.orderType,
		stoorder.orderStatus,
		stoorder.contactStoreId,
		stoorder.remarks,
		stoorder.totalNum, stoorder.totalAmt,
		stoorder.discountRatio,
		stoorder.discount,
		stoorder.mchange,
		stoorder.tax, stoorder.realcost,
		stoorder.payCate1, stoorder.payCost1,
		stoorder.payCate2,
		stoorder.payCost2, stoorder.debetAmt,
		stoorder.freight,
		stoorder.logisticsCode,
		stoorder.orderTime
		from
		ss_stoorder_#{spStoOrder.storeId,jdbcType=INTEGER} stoorder
		LEFT JOIN
		sp_store store ON store.id = stoorder.sellerStoreId
		LEFT JOIN sp_store
		store1 ON store1.id = stoorder.buyerStoreId
		where 1=1
		<if test="spStoOrder.ordertype != null">
			and stoorder.orderType
			=#{spStoOrder.ordertype,jdbcType=VARCHAR}
		</if>
		<if test="spStoOrder.sellerstoreid != null">
			and stoorder.sellerStoreId
			=#{spStoOrder.sellerstoreid,jdbcType=INTEGER}
		</if>
		<if test="spStoOrder.buyerstoreid != null">
			and stoorder.buyerStoreId
			=#{spStoOrder.buyerstoreid,jdbcType=INTEGER}
		</if>
		<if test="spStoOrder.payorderno != null">
			and stoorder.payOrderNo =
			#{spStoOrder.payorderno,jdbcType=VARCHAR}
		</if>
		<if test="spStoOrder.status != null">
			and stoorder.orderStatus in
			<foreach collection="spStoOrder.status" item="item" index="index"
				separator="," open="(" close=")">#{item,jdbcType=INTEGER}</foreach>
		</if>
		<if test="page!=null">
			LIMIT #{page.startRow},#{page.pageSize}
		</if>
	</select>

	<select id="selectByOrderNo" resultMap="BaseResultMap">
		select
		a.id,
		a.sellerStoreId, a.buyerStoreId, a.operator, a.payOrderNo,
		a.orderType,
		a.orderStatus,

		a.shipAddress, a.contactStoreId, a.remarks, a.totalNum, a.totalAmt,
		a.discountRatio,
		a.discount,
		a.mchange, a.tax, a.realcost, a.payCate1,
		a.payCost1,
		a.payCate2, a.payCost2
		from
		ss_stoorder_#{storeId,jdbcType=INTEGER} a
		left join sc_trade_info
		b on
		a.payOrderNo = b.payOrderNo
		where b.tradeNo
		=
		#{tradeNo,jdbcType=VARCHAR}
	</select>
	<select id="selectByTradeNo" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ss_stoorder_#{storeId,jdbcType=INTEGER}
		where payOrderNo =
		#{orderNo,jdbcType=VARCHAR}
	</select>

	<select id="financialCounting" parameterType="costumetrade.order.query.OrderQuery" resultMap="AccountResultMap">
		SELECT
		'期初' begining,
		SUM(CASE WHEN sto.orderStatus =6 THEN sto.debetAmt  ELSE 0 END) AS receivable ,
		SUM(CASE WHEN sto.orderStatus =7 THEN sto.realcost ELSE 0 END) AS payable
		FROM
		ss_stoorder_#{storeId} sto
		LEFT JOIN ss_financial ssf ON ssf.orderNo =
		sto.payOrderNo AND
		ssf.buyerId=sto.buyerStoreId
		AND ssf.sellerId=sto.sellerStoreId
		WHERE 1=1
		AND ssf.orderNo IS NOT NULL
		<if test="timeFrom !=null">
		AND sto.orderTime &lt;= str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		</if>
		and sto.sellerStoreId = #{sellerstoreid}
		and sto.buyerStoreId =#{buyerstoreid}
		AND ((sto.debetAmt >0 AND sto.orderStatus=6) OR STO.orderStatus=7)
		
		<if test="timeTo !=null">
		UNION
		ALL
		SELECT
		'期末' begining,
		SUM(CASE WHEN sto.orderStatus =6 THEN sto.debetAmt  ELSE 0 END) AS receivable ,
		SUM(CASE WHEN sto.orderStatus =7 THEN sto.realcost ELSE 0 END) AS payable
		FROM
		ss_stoorder_#{storeId} sto
		LEFT JOIN ss_financial ssf ON
		ssf.orderNo = sto.payOrderNo AND
		ssf.buyerId=sto.buyerStoreId AND
		ssf.sellerId=sto.sellerStoreId
		WHERE 1=1
		AND ssf.orderNo IS NOT NULL
		AND sto.orderTime &lt;=str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		and sto.sellerStoreId = #{sellerstoreid}
		and sto.buyerStoreId =#{buyerstoreid}
		AND ((sto.debetAmt >0  AND sto.orderStatus=6) OR STO.orderStatus=7)
		</if>
	</select>
	<select id="financialCountingOrders" parameterType="costumetrade.order.query.OrderQuery"  resultMap="BaseResultMap">
	SELECT
		sto.orderType ,
		sto.sellerStoreId,
		sto.buyerStoreId,
		sto.totalAmt,
		sto.realcost,
		da.dict_text as payCate1,
		sto.payCost1,
		sto.debetAmt,
		sto.orderTime
		FROM
		ss_stoorder_#{storeId} sto
		LEFT JOIN ss_financial ssf ON ssf.orderNo = sto.payOrderNo AND ssf.buyerId=sto.buyerStoreId AND ssf.sellerId=sto.sellerStoreId
		LEFT JOIN ss_data_dictionary da ON  da.dict_value = sto.payCate1 AND da.storeId = #{storeId}
		WHERE 1=1
		and da.storeId = #{storeId}
		AND ssf.orderNo IS NOT NULL
		and sto.sellerStoreId = #{sellerstoreid}
		and sto.buyerStoreId =#{buyerstoreid}
		AND sto.orderTime &gt;= str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;= str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		AND ((sto.totalAmt>sto.realcost AND sto.orderStatus=6) OR STO.orderStatus=7)
		UNION ALL
		SELECT
		(CASE WHEN pay.billType =1 THEN '收客户欠款' 
		  WHEN pay.billType =2 THEN '还供应商欠款' ELSE NULL END) AS  orderType,
		0 AS sellerStoreId,
		0 AS buyerStoreId,
		0 AS totalAmt,
		pay.payAmt AS realcost,
		da.dict_text AS payCate1,
		pay.payAmt AS payCost1,
		0 as debetAmt,
		pay.payTime AS orderTime
		FROM
		ss_payment pay
		LEFT JOIN ss_data_dictionary da ON da.storeId = pay.storeId AND da.dict_value = pay.payType
		where 1=1
		AND pay.payTime &gt;= str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND pay.payTime &lt;= str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		and pay.clientId = #{clientId}
		and pay.payObjType =#{clientType}
		
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		ss_stoorder
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert">
		insert into
		ss_stoorder_#{sellerStoreId,jdbcType=INTEGER} (sellerStoreId,
		buyerStoreId,
		operator, payOrderNo, refundDate,
		relatedOutTradeNo,
		refundStatus, orderType,
		orderStatus, shipType, shipStatus,
		shipContact, shipPhone, shipAddress,logisticsCode,
		contactStoreId, remarks, totalNum,
		totalAmt, discountRatio, discount,
		mchange, tax, realcost,freight,
		payCate1,
		payCost1, payCate2,
		payCost2, debetAmt, orderTime,
		createTime, createBy,
		modifyTime,
		modifyBy)
		values (#{record.sellerstoreid,jdbcType=INTEGER},
		#{record.buyerstoreid,jdbcType=INTEGER},
		#{record.operator,jdbcType=VARCHAR},
		#{record.payorderno,jdbcType=VARCHAR},
		#{record.refunddate,jdbcType=TIMESTAMP},
		#{record.relatedouttradeno,jdbcType=VARCHAR},
		#{record.refundstatus,jdbcType=VARCHAR},
		#{record.ordertype,jdbcType=VARCHAR},
		#{record.orderstatus,jdbcType=INTEGER},
		#{record.shiptype,jdbcType=INTEGER},
		#{record.shipstatus,jdbcType=INTEGER},
		#{record.shipcontact,jdbcType=VARCHAR},
		#{record.shipphone,jdbcType=VARCHAR},
		#{record.shipaddress,jdbcType=VARCHAR},
		#{record.logisticsCode,jdbcType=VARCHAR},
		#{record.contactstoreid,jdbcType=VARCHAR},
		#{record.remarks,jdbcType=VARCHAR},
		#{record.totalnum,jdbcType=DECIMAL},
		#{record.totalamt,jdbcType=DECIMAL},
		#{record.discountratio,jdbcType=INTEGER},
		#{record.discount,jdbcType=DECIMAL},
		#{record.mchange,jdbcType=DECIMAL}, #{record.tax,jdbcType=DECIMAL},
		#{record.realcost,jdbcType=DECIMAL},
		#{record.freight,jdbcType=DECIMAL},
		#{record.paycate1,jdbcType=VARCHAR},
		#{record.paycost1,jdbcType=DECIMAL},
		#{record.paycate2,jdbcType=VARCHAR},
		#{record.paycost2,jdbcType=DECIMAL},
		#{record.debetamt,jdbcType=DECIMAL},
		#{record.ordertime,jdbcType=TIMESTAMP},
		#{record.createtime,jdbcType=TIMESTAMP},
		#{record.createby,jdbcType=VARCHAR},
		#{record.modifytime,jdbcType=TIMESTAMP},
		#{record.modifyby,jdbcType=VARCHAR});


		insert into ss_member_stoorder
		(sellerStoreId, buyerStoreId,
		operator, payOrderNo, refundDate,
		relatedOutTradeNo, refundStatus, orderType,
		orderStatus, shipType,
		shipStatus,
		shipContact, shipPhone, shipAddress,logisticsCode,
		contactStoreId,
		remarks, totalNum,
		totalAmt, discountRatio, discount,
		mchange, tax,
		realcost,freight,
		payCate1, payCost1, payCate2,
		payCost2, debetAmt, orderTime,
		createTime, createBy, modifyTime,
		modifyBy)
		values
		(#{record.sellerstoreid,jdbcType=INTEGER},
		#{record.buyerstoreid,jdbcType=INTEGER},
		#{record.operator,jdbcType=VARCHAR},
		#{record.payorderno,jdbcType=VARCHAR},
		#{record.refunddate,jdbcType=TIMESTAMP},
		#{record.relatedouttradeno,jdbcType=VARCHAR},
		#{record.refundstatus,jdbcType=VARCHAR},
		#{record.ordertype,jdbcType=VARCHAR},
		#{record.orderstatus,jdbcType=INTEGER},
		#{record.shiptype,jdbcType=INTEGER},
		#{record.shipstatus,jdbcType=INTEGER},
		#{record.shipcontact,jdbcType=VARCHAR},
		#{record.shipphone,jdbcType=VARCHAR},
		#{record.shipaddress,jdbcType=VARCHAR},
		#{record.logisticsCode,jdbcType=VARCHAR},
		#{record.contactstoreid,jdbcType=VARCHAR},
		#{record.remarks,jdbcType=VARCHAR},
		#{record.totalnum,jdbcType=DECIMAL},
		#{record.totalamt,jdbcType=DECIMAL},
		#{record.discountratio,jdbcType=INTEGER},
		#{record.discount,jdbcType=DECIMAL},
		#{record.mchange,jdbcType=DECIMAL}, #{record.tax,jdbcType=DECIMAL},
		#{record.realcost,jdbcType=DECIMAL},
		#{record.freight,jdbcType=DECIMAL},
		#{record.paycate1,jdbcType=VARCHAR},
		#{record.paycost1,jdbcType=DECIMAL},
		#{record.paycate2,jdbcType=VARCHAR},
		#{record.paycost2,jdbcType=DECIMAL},
		#{record.debetamt,jdbcType=DECIMAL},
		#{record.ordertime,jdbcType=TIMESTAMP},
		#{record.createtime,jdbcType=TIMESTAMP},
		#{record.createby,jdbcType=VARCHAR},
		#{record.modifytime,jdbcType=TIMESTAMP},
		#{record.modifyby,jdbcType=VARCHAR});
	</insert>


	<insert id="insertStore">
		insert into ss_stoorder_#{storeId,jdbcType=INTEGER}
		(sellerStoreId,
		buyerStoreId,
		operator, payOrderNo, refundDate,
		relatedOutTradeNo, refundStatus, orderType,
		orderStatus, shipType,
		shipStatus,
		shipContact, shipPhone, shipAddress,logisticsCode,
		contactStoreId,
		remarks, totalNum,
		totalAmt, discountRatio, discount,
		mchange, tax,
		realcost,freight,
		payCate1, payCost1, payCate2,
		payCost2, debetAmt, orderTime,
		createTime, createBy, modifyTime,
		modifyBy)
		values
		(#{record.sellerstoreid,jdbcType=INTEGER},
		#{record.buyerstoreid,jdbcType=INTEGER},
		#{record.operator,jdbcType=VARCHAR},
		#{record.payorderno,jdbcType=VARCHAR},
		#{record.refunddate,jdbcType=TIMESTAMP},
		#{record.relatedouttradeno,jdbcType=VARCHAR},
		#{record.refundstatus,jdbcType=VARCHAR},
		#{record.ordertype,jdbcType=VARCHAR},
		#{record.orderstatus,jdbcType=INTEGER},
		#{record.shiptype,jdbcType=INTEGER},
		#{record.shipstatus,jdbcType=INTEGER},
		#{record.shipcontact,jdbcType=VARCHAR},
		#{record.shipphone,jdbcType=VARCHAR},
		#{record.shipaddress,jdbcType=VARCHAR},
		#{record.logisticsCode,jdbcType=VARCHAR},
		#{record.contactstoreid,jdbcType=VARCHAR},
		#{record.remarks,jdbcType=VARCHAR},
		#{record.totalnum,jdbcType=DECIMAL},
		#{record.totalamt,jdbcType=DECIMAL},
		#{record.discountratio,jdbcType=INTEGER},
		#{record.discount,jdbcType=DECIMAL},
		#{record.mchange,jdbcType=DECIMAL}, #{record.tax,jdbcType=DECIMAL},
		#{record.realcost,jdbcType=DECIMAL},
		#{record.freight,jdbcType=DECIMAL},
		#{record.paycate1,jdbcType=VARCHAR},
		#{record.paycost1,jdbcType=DECIMAL},
		#{record.paycate2,jdbcType=VARCHAR},
		#{record.paycost2,jdbcType=DECIMAL},
		#{record.debetamt,jdbcType=DECIMAL},
		#{record.ordertime,jdbcType=TIMESTAMP},
		#{record.createtime,jdbcType=TIMESTAMP},
		#{record.createby,jdbcType=VARCHAR},
		#{record.modifytime,jdbcType=TIMESTAMP},
		#{record.modifyby,jdbcType=VARCHAR})


	</insert>
	<insert id="insertSelective" parameterType="costumetrade.order.domain.SsStoOrder">
		insert into ss_stoorder
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="sellerstoreid != null">
				sellerStoreId,
			</if>
			<if test="buyerstoreid != null">
				buyerStoreId,
			</if>
			<if test="operator != null">
				operator,
			</if>
			<if test="payorderno != null">
				payOrderNo,
			</if>
			<if test="refunddate != null">
				refundDate,
			</if>
			<if test="relatedouttradeno != null">
				relatedOutTradeNo,
			</if>
			<if test="refundstatus != null">
				refundStatus,
			</if>
			<if test="ordertype != null">
				orderType,
			</if>
			<if test="orderstatus != null">
				orderStatus,
			</if>
			<if test="shiptype != null">
				shipType,
			</if>
			<if test="shipstatus != null">
				shipStatus,
			</if>
			<if test="shipcontact != null">
				shipContact,
			</if>
			<if test="shipphone != null">
				shipPhone,
			</if>
			<if test="shipaddress != null">
				shipAddress,
			</if>
			<if test="logisticsCode != null">
				logisticsCode,
			</if>
			<if test="contactstoreid != null">
				contactStoreId,
			</if>
			<if test="remarks != null">
				remarks,
			</if>
			<if test="totalnum != null">
				totalNum,
			</if>
			<if test="totalamt != null">
				totalAmt,
			</if>
			<if test="discountratio != null">
				discountRatio,
			</if>
			<if test="discount != null">
				discount,
			</if>
			<if test="mchange != null">
				mchange,
			</if>
			<if test="tax != null">
				tax,
			</if>
			<if test="realcost != null">
				realcost,
			</if>
			<if test="freight != null">
				freight,
			</if>
			<if test="paycate1 != null">
				payCate1,
			</if>
			<if test="paycost1 != null">
				payCost1,
			</if>
			<if test="paycate2 != null">
				payCate2,
			</if>
			<if test="paycost2 != null">
				payCost2,
			</if>
			<if test="debetamt != null">
				debetAmt,
			</if>
			<if test="ordertime != null">
				orderTime,
			</if>
			<if test="createtime != null">
				createTime,
			</if>
			<if test="createby != null">
				createBy,
			</if>
			<if test="modifytime != null">
				modifyTime,
			</if>
			<if test="modifyby != null">
				modifyBy,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="sellerstoreid != null">
				#{sellerstoreid,jdbcType=INTEGER},
			</if>
			<if test="buyerstoreid != null">
				#{buyerstoreid,jdbcType=INTEGER},
			</if>
			<if test="operator != null">
				#{operator,jdbcType=VARCHAR},
			</if>
			<if test="payorderno != null">
				#{payorderno,jdbcType=VARCHAR},
			</if>
			<if test="refunddate != null">
				#{refunddate,jdbcType=TIMESTAMP},
			</if>
			<if test="relatedouttradeno != null">
				#{relatedouttradeno,jdbcType=VARCHAR},
			</if>
			<if test="refundstatus != null">
				#{refundstatus,jdbcType=VARCHAR},
			</if>
			<if test="ordertype != null">
				#{ordertype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				#{orderstatus,jdbcType=INTEGER},
			</if>
			<if test="shiptype != null">
				#{shiptype,jdbcType=INTEGER},
			</if>
			<if test="shipstatus != null">
				#{shipstatus,jdbcType=INTEGER},
			</if>
			<if test="shipcontact != null">
				#{shipcontact,jdbcType=VARCHAR},
			</if>
			<if test="shipphone != null">
				#{shipphone,jdbcType=VARCHAR},
			</if>
			<if test="shipaddress != null">
				#{shipaddress,jdbcType=VARCHAR},
			</if>
			<if test="logisticsCode != null">
				#{logisticsCode,jdbcType=VARCHAR},
			</if>
			<if test="contactstoreid != null">
				#{contactstoreid,jdbcType=VARCHAR},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="totalnum != null">
				#{totalnum,jdbcType=DECIMAL},
			</if>
			<if test="totalamt != null">
				#{totalamt,jdbcType=DECIMAL},
			</if>
			<if test="discountratio != null">
				#{discountratio,jdbcType=INTEGER},
			</if>
			<if test="discount != null">
				#{discount,jdbcType=DECIMAL},
			</if>
			<if test="mchange != null">
				#{mchange,jdbcType=DECIMAL},
			</if>
			<if test="tax != null">
				#{tax,jdbcType=DECIMAL},
			</if>
			<if test="realcost != null">
				#{realcost,jdbcType=DECIMAL},
			</if>
			<if test="freight != null">
				#{freight,jdbcType=DECIMAL},
			</if>
			<if test="paycate1 != null">
				#{paycate1,jdbcType=VARCHAR},
			</if>
			<if test="paycost1 != null">
				#{paycost1,jdbcType=DECIMAL},
			</if>
			<if test="paycate2 != null">
				#{paycate2,jdbcType=VARCHAR},
			</if>
			<if test="paycost2 != null">
				#{paycost2,jdbcType=DECIMAL},
			</if>
			<if test="debetamt != null">
				#{debetamt,jdbcType=DECIMAL},
			</if>
			<if test="ordertime != null">
				#{ordertime,jdbcType=TIMESTAMP},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="createby != null">
				#{createby,jdbcType=VARCHAR},
			</if>
			<if test="modifytime != null">
				#{modifytime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyby != null">
				#{modifyby,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="costumetrade.order.domain.SsStoOrder">
		update ss_stoorder_#{sellerstoreid,jdbcType=INTEGER}
		<set>
			<if test="orderstatus != null">
				orderStatus = #{orderstatus,jdbcType=INTEGER},
			</if>
			<if test="operator != null">
				operator = #{operator},
			</if>
			<if test="paycate1 != null">
				paycate1 = #{paycate1},
			</if>
			<if test="paycost1 != null">
				paycost1 = #{paycost1},
			</if>
			<if test="paycate2 != null">
				paycate2 = #{paycate2},
			</if>
			<if test="paycost2 != null">
				paycost2 = #{paycost2},
			</if>
			<if test="realcost != null">
				realcost = #{realcost},
			</if>
			<if test="debetamt != null">
				debetamt = #{debetamt},
			</if>
			<if test="freight != null">
				freight = #{freight},
			</if>
			<if test="logisticsCode != null">
				logisticsCode = #{logisticsCode},
			</if>
		</set>
		where payOrderNo = #{payorderno,jdbcType=VARCHAR};

		update
		ss_member_stoorder
		<set>
			<if test="orderstatus != null">
				orderStatus = #{orderstatus,jdbcType=INTEGER},
			</if>
			<if test="operator != null">
				operator = #{operator},
			</if>
			<if test="paycate1 != null">
				paycate1 = #{paycate1},
			</if>
			<if test="paycost1 != null">
				paycost1 = #{paycost1},
			</if>
			<if test="paycate2 != null">
				paycate2 = #{paycate2},
			</if>
			<if test="paycost2 != null">
				paycost2 = #{paycost2},
			</if>
			<if test="realcost != null">
				realcost = #{realcost},
			</if>
			<if test="debetamt != null">
				debetamt = #{debetamt},
			</if>
			<if test="freight != null">
				freight = #{freight},
			</if>
			<if test="logisticsCode != null">
				logisticsCode = #{logisticsCode},
			</if>
		</set>
		where payOrderNo = #{payorderno,jdbcType=VARCHAR};
	</update>

	<update id="updateByPrimaryKeySelectiveStore" parameterType="costumetrade.order.domain.SsStoOrder">
		update ss_stoorder_#{sellerstoreid,jdbcType=INTEGER}
		<set>
			<if test="orderstatus != null">
				orderStatus = #{orderstatus,jdbcType=INTEGER},
			</if>
			<if test="operator != null">
				operator = #{operator},
			</if>
			<if test="paycate1 != null">
				paycate1 = #{paycate1},
			</if>
			<if test="paycost1 != null">
				paycost1 = #{paycost1},
			</if>
			<if test="paycate2 != null">
				paycate2 = #{paycate2},
			</if>
			<if test="paycost2 != null">
				paycost2 = #{paycost2},
			</if>
			<if test="realcost != null">
				realcost = #{realcost},
			</if>
			<if test="debetamt != null">
				debetamt = #{debetamt},
			</if>
			<if test="freight != null">
				freight = #{freight},
			</if>
			<if test="logisticsCode != null">
				logisticsCode = #{logisticsCode},
			</if>
		</set>
		where payOrderNo = #{payorderno,jdbcType=VARCHAR};

		update
		ss_stoorder_#{buyerstoreid,jdbcType=INTEGER}
		<set>
			<if test="orderstatus != null">
				orderStatus = #{orderstatus,jdbcType=INTEGER},
			</if>
			<if test="operator != null">
				operator = #{operator},
			</if>
			<if test="paycate1 != null">
				paycate1 = #{paycate1},
			</if>
			<if test="paycost1 != null">
				paycost1 = #{paycost1},
			</if>
			<if test="paycate2 != null">
				paycate2 = #{paycate2},
			</if>
			<if test="paycost2 != null">
				paycost2 = #{paycost2},
			</if>
			<if test="realcost != null">
				realcost = #{realcost},
			</if>
			<if test="debetamt != null">
				debetamt = #{debetamt},
			</if>
			<if test="freight != null">
				freight = #{freight},
			</if>
			<if test="logisticsCode != null">
				logisticsCode = #{logisticsCode},
			</if>
		</set>
		where payOrderNo = #{payorderno,jdbcType=VARCHAR};
	</update>
	<update id="updateByPrimaryKey" parameterType="costumetrade.order.domain.SsStoOrder">
		update ss_stoorder
		set sellerStoreId = #{sellerstoreid,jdbcType=INTEGER},
		buyerStoreId =
		#{buyerstoreid,jdbcType=INTEGER},
		operator =
		#{operator,jdbcType=VARCHAR},
		payOrderNo =
		#{payorderno,jdbcType=VARCHAR},
		refundDate =
		#{refunddate,jdbcType=TIMESTAMP},
		relatedOutTradeNo =
		#{relatedouttradeno,jdbcType=VARCHAR},
		refundStatus =
		#{refundstatus,jdbcType=VARCHAR},
		orderType =
		#{ordertype,jdbcType=VARCHAR},
		orderStatus =
		#{orderstatus,jdbcType=INTEGER},
		shipType =
		#{shiptype,jdbcType=INTEGER},
		shipStatus =
		#{shipstatus,jdbcType=INTEGER},
		shipContact =
		#{shipcontact,jdbcType=VARCHAR},
		shipPhone =
		#{shipphone,jdbcType=VARCHAR},
		shipAddress =
		#{shipaddress,jdbcType=VARCHAR},
		contactStoreId =
		#{contactstoreid,jdbcType=VARCHAR},
		remarks =
		#{remarks,jdbcType=VARCHAR},
		totalNum = #{totalnum,jdbcType=DECIMAL},
		totalAmt = #{totalamt,jdbcType=DECIMAL},
		discountRatio =
		#{discountratio,jdbcType=INTEGER},
		discount =
		#{discount,jdbcType=DECIMAL},
		mchange = #{mchange,jdbcType=DECIMAL},
		tax = #{tax,jdbcType=DECIMAL},
		realcost = #{realcost,jdbcType=DECIMAL},
		payCate1 = #{paycate1,jdbcType=VARCHAR},
		payCost1 =
		#{paycost1,jdbcType=DECIMAL},
		payCate2 = #{paycate2,jdbcType=VARCHAR},
		payCost2 = #{paycost2,jdbcType=DECIMAL},
		debetAmt =
		#{debetamt,jdbcType=DECIMAL},
		orderTime =
		#{ordertime,jdbcType=TIMESTAMP},
		createTime =
		#{createtime,jdbcType=TIMESTAMP},
		createBy =
		#{createby,jdbcType=VARCHAR},
		modifyTime =
		#{modifytime,jdbcType=TIMESTAMP},
		modifyBy =
		#{modifyby,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>
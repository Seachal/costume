<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="costumetrade.report.mapper.SpReportMapper">
	<resultMap id="BaseResultMap" type="costumetrade.report.domain.FinanceReportQuery">
		<result column="saleIncome" jdbcType="DECIMAL" property="saleIncome" />
		<result column="salePay" jdbcType="DECIMAL" property="salePay" />
		<result column="purchaseIncome" jdbcType="DECIMAL" property="purchaseIncome" />
		<result column="purchasePay" jdbcType="DECIMAL" property="purchasePay" />
		<result column="customerRepay" jdbcType="DECIMAL" property="customerRepay" />
		<result column="suppierRepay" jdbcType="DECIMAL" property="suppierRepay" />
		<result column="feeIncome" jdbcType="DECIMAL" property="feeIncome" />
		<result column="feePay" jdbcType="DECIMAL" property="feePay" />
		<result column="payCate" jdbcType="VARCHAR" property="payCate" />
	</resultMap>
	<resultMap id="PurchaseResultMap"
		type="costumetrade.report.domain.PurchaseReportQuery">
		<result column="quantity" jdbcType="DECIMAL" property="quantity" />
		<result column="amount" jdbcType="DECIMAL" property="amount" />
		<result column="productName" jdbcType="VARCHAR" property="productName" />
		<result column="productColor" jdbcType="VARCHAR" property="productColor" />
		<result column="productSize" jdbcType="VARCHAR" property="productSize" />
		<result column="brandName" jdbcType="VARCHAR" property="brandName" />
		<result column="gradeName" jdbcType="VARCHAR" property="gradeName" />
		<result column="storeName" jdbcType="VARCHAR" property="storeName" />
		<result column="productId" jdbcType="VARCHAR" property="productId" />
		<result column="clientName" jdbcType="VARCHAR" property="clientName" />
		<result column="createBy" jdbcType="VARCHAR" property="createBy" />
        <result column="primeCost" jdbcType="DECIMAL" property="primeCost" />
	</resultMap>
	
	<resultMap id="SaleResultMap"
		type="costumetrade.report.domain.PurchaseReportQuery">
		<result column="quantity" jdbcType="DECIMAL" property="quantity" />
		<result column="amount" jdbcType="DECIMAL" property="amount" />
		<result column="pucharseAmount" jdbcType="DECIMAL" property="pucharseAmount" />
		<result column="saleAmount" jdbcType="DECIMAL" property="saleAmount" />
		<result column="productName" jdbcType="VARCHAR" property="productName" />
		<result column="productColor" jdbcType="VARCHAR" property="productColor" />
		<result column="productSize" jdbcType="VARCHAR" property="productSize" />
		<result column="brandName" jdbcType="VARCHAR" property="brandName" />
		<result column="gradeName" jdbcType="VARCHAR" property="gradeName" />
		<result column="storeName" jdbcType="VARCHAR" property="storeName" />
		<result column="productId" jdbcType="VARCHAR" property="productId" />
		<result column="clientName" jdbcType="VARCHAR" property="clientName" />
		<result column="createBy" jdbcType="VARCHAR" property="createBy" />
		<result column="saleAmount" jdbcType="DECIMAL" property="saleAmount" />
		<result column="purchaseAmount" jdbcType="DECIMAL" property="purchaseAmount" />
	</resultMap>
		<resultMap id="SaleResultMap1"
		type="costumetrade.report.domain.SaleReportQuery">
		<result column="quantity" jdbcType="DECIMAL" property="quantity" />
		<result column="amount" jdbcType="DECIMAL" property="amount" />
		<result column="pucharseAmount" jdbcType="DECIMAL" property="pucharseAmount" />
		<result column="saleAmount" jdbcType="DECIMAL" property="saleAmount" />
		<result column="productName" jdbcType="VARCHAR" property="productName" />
		<result column="productColor" jdbcType="VARCHAR" property="productColor" />
		<result column="productSize" jdbcType="VARCHAR" property="productSize" />
		<result column="brandName" jdbcType="VARCHAR" property="brandName" />
		<result column="gradeName" jdbcType="VARCHAR" property="gradeName" />
		<result column="storeName" jdbcType="VARCHAR" property="storeName" />
		<result column="productId" jdbcType="VARCHAR" property="productId" />
		<result column="clientName" jdbcType="VARCHAR" property="clientName" />
		<result column="createBy" jdbcType="VARCHAR" property="createBy" />
		<result column="saleAmount" jdbcType="DECIMAL" property="saleAmount" />
		<result column="purchaseAmount" jdbcType="DECIMAL" property="purchaseAmount" />
	</resultMap>
	<resultMap id="GeneralResultMap"
		type="costumetrade.report.domain.GeneralReportQuery">
		<result column="saleAmount" jdbcType="DECIMAL" property="saleAmount" />
		<result column="purchaseAmount" jdbcType="DECIMAL" property="purchaseAmount" />
		<result column="noPayAmount" jdbcType="DECIMAL" property="noPayAmount" />
		<result column="noReciptAmount" jdbcType="DECIMAL" property="noReciptAmount" />
		<result column="payCate" jdbcType="VARCHAR" property="payCate" />
		<result column="payAmount" jdbcType="DECIMAL" property="payAmount" />
		<result column="reciptAmount" jdbcType="DECIMAL" property="reciptAmount" />
		<result column="clientAmount" jdbcType="DECIMAL" property="clientAmount" />
		<result column="feeAmount" jdbcType="DECIMAL" property="feeAmount" />
		<result column="ordersCount" jdbcType="DECIMAL" property="ordersCount" />
		<result column="puchaseOrderCount" jdbcType="DECIMAL" property="puchaseOrderCount" />
		<result column="saleOrderCount" jdbcType="DECIMAL" property="saleOrderCount" />
		<result column="clientOrderCount" jdbcType="DECIMAL" property="clientOrderCount" />
		<result column="saleCount" jdbcType="DECIMAL" property="saleCount" />
		<result column="puchaseCount" jdbcType="DECIMAL" property="puchaseCount" />
	</resultMap>
	<sql id="Base_Column_List">
		saleIncome, salePay,purchaseIncome, purchasePay,
		customerRepay, suppierRepay,
		feeIncome, feePay
	</sql>
	<select id="financeReport" parameterType="costumetrade.report.domain.FinanceReportQuery"
		resultMap="BaseResultMap">
		SELECT
		da.dict_text AS payCate,
		SUM(CASE WHEN sto.orderStatus
		=5 AND
		sto.sellerStoreId=#{storeId} THEN sto.debetAmt ELSE 0 END) AS
		saleIncome ,
		SUM(CASE WHEN sto.orderStatus =7 AND
		sto.sellerStoreId=#{storeId} THEN sto.payCost1 ELSE 0 END) AS salePay,
		SUM(CASE WHEN sto.orderStatus =5 AND sto.buyerStoreId=#{storeId} THEN
		sto.debetAmt ELSE 0 END) AS purchasePay,
		SUM(CASE WHEN sto.orderStatus
		=7 AND sto.buyerStoreId=#{storeId} THEN sto.payCost1 ELSE 0 END) AS
		purchaseIncome,
		(CASE WHEN p.customerRepay IS NOT NULL THEN
		p.customerRepay ELSE 0 END )AS customerRepay ,
		(CASE WHEN
		p.suppierRepay IS NOT NULL THEN p.suppierRepay ELSE 0 END ) AS
		suppierRepay,
		(CASE WHEN c.feeIncome IS NOT NULL THEN c.feeIncome ELSE
		0 END ) AS feeIncome ,
		(CASE WHEN c.feePay IS NOT NULL THEN c.feePay
		ELSE 0 END ) AS feePay
		FROM
		ss_stoorder sto
		LEFT JOIN
		ss_financial ssf ON ssf.orderNo =sto.payOrderNo AND
		ssf.buyerId=sto.buyerStoreId AND ssf.sellerId=sto.sellerStoreId
		LEFT
		JOIN ss_data_dictionary da ON da.storeId = #{storeId} AND
		da.dict_value = sto.payCate1
		LEFT JOIN (SELECT 0 AS feeIncome
		,cgs.storeId,
		SUM(cgs.payCost ) AS feePay,
		cgs.payCate
		FROM ss_cgsorder
		cgs
		WHERE cgs.storeId = #{storeId}
		AND cgs.order_time &gt;=
		str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND cgs.order_time &lt;=
		str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		)c ON c.storeId=#{storeId}
		
		LEFT JOIN (SELECT
		SUM(CASE WHEN
		pay.payObjType =1 THEN pay.payAmt ELSE 0 END) AS
		customerRepay ,
		SUM(CASE WHEN pay.payObjType =2 THEN pay.payAmt ELSE 0 END) AS
		suppierRepay,
		pay.payType,
		pay.storeId
		FROM ss_payment pay WHERE
		pay.storeId=#{storeId}
		AND pay.payTime &gt;=
		str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND pay.payTime &lt;=
		str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		)p ON
		p.storeId=#{storeId}
		AND p.payType=sto.payCate1
		WHERE 1=1
		AND ssf.orderNo IS NOT NULL
		AND ((sto.debetAmt>0 AND sto.orderStatus=5) OR STO.orderStatus=7)
		AND sto.orderTime &gt;=str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;=str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		AND  (sto.payCate1 = #{payCate} or sto.payCate2 = #{payCate})
	</select>
	<select id="purchaseAnalysisReport" parameterType="costumetrade.report.domain.PurchaseReportQuery"
		resultType="java.util.HashMap">
		SELECT
		sum(detail.count) as quantity,
		SUM(detail.price*detail.count) AS amount,
		detail.productId,
		detail.productName as productName,
		detail.productColor as productColor,
		detail.productSize as productSize,
		brand.brandName as brandName,
		grade.dict_text as gradeName,
		sto.operator as createBy
		
		
		FROM
		ss_stodetail detail
		LEFT JOIN
		ss_stoorder sto
		ON
		sto.payOrderNo = detail.orderId
		left join
		sp_product product
		on
		product.id=detail.productId AND product.storeId = #{storeId} 
		left join
		sp_pbrand
		brand
		on brand.id =
		product.brandId and brand.storeId
		=#{storeId}
		left join
		ss_data_dictionary grade
		on grade.dict_group='PRODUCT_GRADE'
		and
		grade.storeId=#{storeId} and grade.dict_value = product.grade
		where 1=1
		and sto.sellerStoreId = #{storeId}
		AND sto.orderTime &gt;=str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;=str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		<if test="filter.value !=null">
			and ${filter.field} =#{filter.value}
		</if>
		<if test="filter.field !=null">
		group by ${filter.field}
		</if>
	    order by quantity desc
	</select>

	<select id="realTimeInventory"
		resultType="java.util.HashMap">
		SELECT
		(case when  SUM(stock.stockNum) is not null then SUM(stock.stockNum) else 0 end)  AS quantity,
		stock.productId,
		product.name AS productName,
		stock.productColor AS productColor,
		stock.productSize AS productSize,
		brand.brandName AS brandName,
		grade.dict_text AS gradeName,
		stock.createBy,
		store.name AS storeName
		FROM
		ss_stock stock
		LEFT JOIN sp_product product
		ON product.id = stock.productId AND product.storeId = #{query.storeId} 
		LEFT JOIN sp_pbrand brand
		ON brand.id = product.brandId
		AND brand.storeId = stock.storeId
		LEFT JOIN ss_data_dictionary grade
		ON grade.dict_group='PRODUCT_GRADE'
		AND grade.storeId = stock.storeId
		AND grade.dict_value = product.grade
		LEFT JOIN sp_store store
		ON store.id = stock.storeId
		WHERE 1=1
		and stock.storeId = #{query.storeId}
		<if test="query.filter.value !=null">
			and ${query.filter.field} = #{query.filter.value}
		</if>
		<if test="query.productTypeArray != null">
			and productType.cateName in
			<foreach collection="query.productTypeArray" item="item"
				index="index" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="query.productBrandArray != null">
			and brand.brandName in
			<foreach collection="query.productBrandArray" item="item"
				index="index" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="query.productSeasonArray != null">
			and product.season in
			<foreach collection="query.productSeasonArray" item="item"
				index="index" open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.productColorArray != null">
			and stock.productColor in
			<foreach collection="query.productColorArray" item="item"
				index="index" open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.productSizeArray != null">
			and stock.productSize in
			<foreach collection="query.productSizeArray" item="item"
				index="index" open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.operatorArray != null">
			and stock.createBy in
			<foreach collection="query.operatorArray" item="item" index="index"
				open="(" separator="," close=")"> #{item}</foreach>
		</if>
		
		<if test="query.filter.field !=null ">
		group by ${query.filter.field}
		</if>
		
		
	    <if test="query.quantityOp == 'asc'">
			order by quantity asc
		</if>
		<if test="query.quantityOp == 'desc'">
			order by quantity desc
		</if>
	
		<if test="page != null">
			LIMIT #{page.startRow},#{page.pageSize}
		</if>
	</select>
	<select id="purchaseReport3" resultMap="PurchaseResultMap">
		SELECT 
		detail.productName as productName,
		cli.clientName
		FROM
		ss_stodetail detail
		LEFT JOIN
		ss_stoorder sto
		ON sto.payOrderNo = detail.orderId
		left join sp_product product
		on product.id=detail.productId AND product.storeId = #{query.storeId} 
		left join sp_pbrand brand
		on brand.id =product.brandId and brand.storeId =#{query.storeId}
		LEFT JOIN sp_product_type productType ON productType.id =product.productType and
		productType.storeId =#{query.storeId}
		<if test="query.reportType==1"><!-- 采购报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON  chat.storeId = sto.sellerStoreId
	        AND (sto.sellerStoreId <![CDATA[ <> ]]> ""  AND sto.sellerStoreId IS NOT NULL) 
	      LEFT JOIN sp_client c 
	        ON sto.buyerStoreId = c.storeId 
	        AND c.openid = chat.openId 
	    WHERE 1 = 1 
	      AND sto.buyerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		<if test="query.reportType==2"><!-- 销售报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON (
	          chat.userId = sto.buyerStoreId 
	          OR chat.storeId = sto.buyerStoreId
	        ) 
	        AND (
	           sto.buyerStoreId <![CDATA[ <> ]]> "" 
	          AND sto.buyerStoreId IS NOT NULL
	        ) 
	      LEFT JOIN sp_client c 
	        ON sto.sellerStoreId = c.storeId 
	        AND c.openid = chat.openId 
	    WHERE 1 = 1 
	      AND sto.sellerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		<if test="query.reportType==3"><!--会员报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON (
	          chat.userId = sto.buyerStoreId 
	          OR chat.storeId = sto.buyerStoreId
	        ) 
	        AND (
	           sto.buyerStoreId <![CDATA[ <> ]]> "" 
	          AND sto.buyerStoreId IS NOT NULL
	        ) 
	      LEFT JOIN sp_client c 
	        ON sto.sellerStoreId = c.storeId 
	        AND c.openid = chat.openId and c.type=1
	    WHERE 1 = 1 
	      AND sto.sellerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		where 1=1
		AND sto.orderStatus ='5'
		<if test="query.reportType==1"><!-- 采购报表 -->
			and sto.buyerStoreId=#{query.storeId}
		</if>
		<if test="query.reportType==2"><!-- 销售报表 -->
			and sto.sellerStoreId=#{query.storeId}
		</if>
		<if test="query.reportType==3"><!-- 会员报表 -->
			and sto.sellerStoreId=#{query.storeId}
		</if>
		AND sto.orderTime &gt;=str_to_date(#{query.timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;=str_to_date(#{query.timeTo},'%Y-%m-%d %H:%i:%s')
		
		<if test="query.productTypeArray != null">
			and productType.cateName in
			<foreach collection="query.productTypeArray" item="item"
				index="index" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="query.productBrandArray != null">
			and brand.brandName in
			<foreach collection="query.productBrandArray" item="item"
				index="index" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="query.productSeasonArray != null">
			and product.season in
			<foreach collection="query.productSeasonArray" item="item"
				index="index" open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.productColorArray != null">
			and detail.productColor in
			<foreach collection="query.productColorArray" item="item"
				index="index" open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.productSizeArray != null">
			and detail.productSize in
			<foreach collection="query.productSizeArray" item="item"
				index="index" open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.clientIdArray != null">
			and cli.id in
			<foreach collection="query.clientIdArray" item="item" index="index"
				open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.operatorArray != null">
			and sto.operator in
			<foreach collection="query.operatorArray" item="item" index="index"
				open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.filter.value !=null">
			and ${query.filter.field} =#{query.filter.value}
		</if>
		group by ${query.filter.field}
		<if test="page != null">
			LIMIT #{page.startRow},#{page.pageSize}
		</if>
	</select>
	<select id="purchaseReport1" resultMap="PurchaseResultMap">
		SELECT
		sum(detail.count) as quantity,
		SUM(detail.price*detail.count) AS amount,
		detail.productName as productName,
		cli.clientName
		FROM
		ss_stodetail detail
		LEFT JOIN
		ss_stoorder sto
		ON sto.payOrderNo = detail.orderId
		left join sp_product product
		on product.id=detail.productId AND product.storeId = #{query.storeId} 
		left join sp_pbrand brand
		on brand.id = product.brandId and brand.storeId =#{query.storeId}
		LEFT JOIN
		sp_product_type productType ON productType.id =product.productType and
		productType.storeId =#{query.storeId}
		<if test="query.reportType==1"><!-- 采购报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON  chat.storeId = sto.sellerStoreId
	        AND (sto.sellerStoreId <![CDATA[ <> ]]> ""  AND sto.sellerStoreId IS NOT NULL) 
	      LEFT JOIN sp_client c 
	        ON sto.buyerStoreId = c.storeId 
	        AND c.openid = chat.openId 
	    WHERE 1 = 1 
	      AND sto.buyerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		<if test="query.reportType==2"><!-- 销售报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON (
	          chat.userId = sto.buyerStoreId 
	          OR chat.storeId = sto.buyerStoreId
	        ) 
	        AND (
	           sto.buyerStoreId <![CDATA[ <> ]]> "" 
	          AND sto.buyerStoreId IS NOT NULL
	        ) 
	      LEFT JOIN sp_client c 
	        ON sto.sellerStoreId = c.storeId 
	        AND c.openid = chat.openId 
	    WHERE 1 = 1 
	      AND sto.sellerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		<if test="query.reportType==3"><!--会员报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON (
	          chat.userId = sto.buyerStoreId 
	          OR chat.storeId = sto.buyerStoreId
	        ) 
	        AND (
	           sto.buyerStoreId <![CDATA[ <> ]]> "" 
	          AND sto.buyerStoreId IS NOT NULL
	        ) 
	      LEFT JOIN sp_client c 
	        ON sto.sellerStoreId = c.storeId 
	        AND c.openid = chat.openId and c.type=1
	    WHERE 1 = 1 
	      AND sto.sellerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		where 1=1
		AND sto.orderStatus ='5'
		<if test="query.reportType==1"><!-- 采购报表 -->
			and sto.buyerStoreId=#{query.storeId}
			
		</if>
		<if test="query.reportType==2"><!-- 销售报表 -->
			and sto.sellerStoreId=#{query.storeId}
			
		</if>
		<if test="query.reportType==3"><!-- 会员报表 -->
			and sto.sellerStoreId=#{query.storeId}
		</if>
		AND sto.orderTime &gt;=str_to_date(#{query.timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;=str_to_date(#{query.timeTo},'%Y-%m-%d %H:%i:%s')
		<if test="query.productTypeArray != null">
			and productType.cateName in
			<foreach collection="query.productTypeArray" item="item"
				index="index" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="query.productBrandArray != null">
			and brand.brandName in
			<foreach collection="query.productBrandArray" item="item"
				index="index" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="query.productSeasonArray != null">
			and product.season in
			<foreach collection="query.productSeasonArray" item="item"
				index="index" open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.productColorArray != null">
			and detail.productColor in
			<foreach collection="query.productColorArray" item="item"
				index="index" open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.productSizeArray != null">
			and detail.productSize in
			<foreach collection="query.productSizeArray" item="item"
				index="index" open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.clientIdArray != null">
			and cli.id in
			<foreach collection="query.clientIdArray" item="item" index="index"
				open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.operatorArray != null">
			and sto.operator in
			<foreach collection="query.operatorArray" item="item" index="index"
				open="(" separator="," close=")"> #{item}</foreach>
		</if>
		<if test="query.filter.value !=null">
			and ${query.filter.field} = #{query.filter.value}
		</if>
		group by ${query.filter.field}
		<if test="query.quantityOp == 'asc'">
			order by quantity asc
		</if>
		<if test="query.quantityOp == 'desc'">
			order by quantity desc
		</if>
		<if test="query.amountOp == 'asc'">
			order by amount asc
		</if>
		<if test="query.amountOp == 'desc'">
			order by amount desc
		</if>
		<if test="page != null">
			LIMIT #{page.startRow},#{page.pageSize}
		</if>

	</select>

	<select id="purchaseReport2" resultMap="PurchaseResultMap">
		SELECT
		sum(case when detail.count is null then 0 else detail.count end) as quantity,
		sum(case when detail.count*detail.price is null then 0 else detail.count*detail.price end) as amount,
		sum(case when detail.count*price.custPrice is null then 0 else detail.count*price.custPrice end) as primeCost,
		#{query.timeFrom} as timeFrom,
		#{query.timeTo} as timeTo,
		detail.productName as productName,
		cli.clientName
		FROM
		ss_stodetail detail
		LEFT JOIN ss_stoorder sto ON sto.payOrderNo =detail.orderId
		 LEFT JOIN ss_pprice price ON
		price.productId = detail.productId AND price.storeId = detail.storeId 
		<if test="query.reportType==1"><!-- 采购报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON  chat.storeId = sto.sellerStoreId
	        AND (sto.sellerStoreId <![CDATA[ <> ]]> ""  AND sto.sellerStoreId IS NOT NULL) 
	      LEFT JOIN sp_client c 
	        ON sto.buyerStoreId = c.storeId 
	        AND c.openid = chat.openId 
	    WHERE 1 = 1 
	      AND sto.buyerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		<if test="query.reportType==2"><!-- 销售报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON (
	          chat.userId = sto.buyerStoreId 
	          OR chat.storeId = sto.buyerStoreId
	        ) 
	        AND (
	           sto.buyerStoreId <![CDATA[ <> ]]> "" 
	          AND sto.buyerStoreId IS NOT NULL
	        ) 
	      LEFT JOIN sp_client c 
	        ON sto.sellerStoreId = c.storeId 
	        AND c.openid = chat.openId 
	    WHERE 1 = 1 
	      AND sto.sellerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		<if test="query.reportType==3"><!-- 会员报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON (
	          chat.userId = sto.buyerStoreId 
	          OR chat.storeId = sto.buyerStoreId
	        ) 
	        AND (
	           sto.buyerStoreId <![CDATA[ <> ]]> "" 
	          AND sto.buyerStoreId IS NOT NULL
	        ) 
	      LEFT JOIN sp_client c 
	        ON sto.sellerStoreId = c.storeId 
	        AND c.openid = chat.openId and c.type=1
	    WHERE 1 = 1 
	      AND sto.sellerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		where 1=1
		AND sto.orderStatus ='5'
		<if test="query.reportType==1"><!-- 采购报表 -->
			and sto.buyerStoreId=#{query.storeId}
		</if>
		<if test="query.reportType==2"><!-- 销售报表 -->
			and sto.sellerStoreId=#{query.storeId}
		</if>
		<if test="query.reportType==3"><!-- 会员报表 -->
			and sto.sellerStoreId=#{query.storeId}
		</if>
		AND sto.orderTime &gt;=str_to_date(#{query.timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;=str_to_date(#{query.timeTo},'%Y-%m-%d %H:%i:%s')
		<if test="query.filter.value !=null">
			and ${query.filter.field} = #{query.filter.value}
		</if>
		<foreach collection="querys" index="index" item="item">
		union all
		SELECT
		sum(case when detail.count is null then 0 else detail.count end) as quantity,
		sum(case when detail.count*detail.price is null then 0 else detail.count*detail.price end) as amount,
		sum(case when detail.count*price.custPrice is null then 0 else detail.count*price.custPrice end) as primeCost,
		#{query.timeFrom} as timeFrom,
		#{query.timeTo} as timeTo,
		detail.productName as productName,
		cli.clientName
		FROM
		ss_stodetail detail
		LEFT
		JOIN ss_stoorder sto
		ON sto.payOrderNo =
		detail.orderId
		 LEFT JOIN ss_pprice price ON
		price.productId = detail.productId AND price.storeId = detail.storeId 
		<if test="query.reportType==1"><!-- 采购报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON  chat.storeId = sto.sellerStoreId
	        AND (sto.sellerStoreId <![CDATA[ <> ]]> ""  AND sto.sellerStoreId IS NOT NULL) 
	      LEFT JOIN sp_client c 
	        ON sto.buyerStoreId = c.storeId 
	        AND c.openid = chat.openId 
	    WHERE 1 = 1 
	      AND sto.buyerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		<if test="query.reportType==2"><!-- 销售报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON (
	          chat.userId = sto.buyerStoreId 
	          OR chat.storeId = sto.buyerStoreId
	        ) 
	        AND (
	           sto.buyerStoreId <![CDATA[ <> ]]> "" 
	          AND sto.buyerStoreId IS NOT NULL
	        ) 
	      LEFT JOIN sp_client c 
	        ON sto.sellerStoreId = c.storeId 
	        AND c.openid = chat.openId 
	    WHERE 1 = 1 
	      AND sto.sellerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		<if test="query.reportType==3"><!-- 会员报表 -->
		LEFT JOIN 
	    (SELECT c.id,
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON (
	          chat.userId = sto.buyerStoreId 
	          OR chat.storeId = sto.buyerStoreId
	        ) 
	        AND (
	           sto.buyerStoreId <![CDATA[ <> ]]> "" 
	          AND sto.buyerStoreId IS NOT NULL
	        ) 
	      LEFT JOIN sp_client c 
	        ON sto.sellerStoreId = c.storeId 
	        AND c.openid = chat.openId and c.type=1
	    WHERE 1 = 1 
	      AND sto.sellerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		</if>
		where 1=1
		AND sto.orderStatus ='5'
		<if test="query.reportType==1"><!-- 采购报表 -->
			and sto.buyerStoreId=#{query.storeId}
		</if>
		<if test="query.reportType==2"><!-- 销售报表 -->
			and sto.sellerStoreId=#{query.storeId}
		</if>
		<if test="query.reportType==3"><!-- 会员报表 -->
			and sto.sellerStoreId=#{query.storeId}
		</if>
			AND sto.orderTime &gt;=str_to_date(#{item.timeFrom},'%Y-%m-%d %H:%i:%s')
			AND sto.orderTime &lt;=str_to_date(#{item.timeTo},'%Y-%m-%d %H:%i:%s')
			<if test="query.filter.value !=null">
			and ${query.filter.field} =#{query.filter.value}
			</if>
		
		</foreach>
	</select>
	
	<select id="employeeReport" 
		resultType="java.util.HashMap">
		SELECT 
		  SUM(detail.count) AS quantity,
		  SUM(detail.price * detail.count) AS amount,
		  detail.productId,
		  detail.productName AS productName,
		  detail.productColor AS productColor,
		  detail.productSize AS productSize,
		  brand.brandName AS brandName,
		  grade.dict_text AS gradeName,
		  employee.reallyName AS createBy
		
		FROM
		  ss_stodetail detail 
		  LEFT JOIN ss_stoorder sto 
		    ON sto.payOrderNo = detail.orderId 
		  LEFT JOIN sp_product product 
		    ON product.id = detail.productId  AND product.storeId = #{query.storeId} 
		  LEFT JOIN sp_pbrand brand 
		    ON brand.id = product.brandId 
		    AND brand.storeId = #{query.storeId} 
		  LEFT JOIN ss_data_dictionary grade 
		    ON grade.dict_group = 'PRODUCT_GRADE' 
		    AND grade.storeId = #{query.storeId} 
		    AND grade.dict_value = product.grade 
		LEFT JOIN sp_employee employee ON employee.id = sto.operator
		where 1=1
		AND sto.orderStatus ='5'
		and sto.sellerStoreId=#{query.storeId}
		AND sto.orderTime &gt;=str_to_date(#{query.timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;=str_to_date(#{query.timeTo},'%Y-%m-%d %H:%i:%s')
		<if test="query.filter.value !=null">
			and ${query.filter.field} =#{query.filter.value}
		</if>
		
		group by ${query.filter.field}
	    <if test="query.quantityOp == 'asc'">
			order by quantity asc
		</if>
		<if test="query.quantityOp == 'desc'">
			order by quantity desc
		</if>
		<if test="query.amountOp == 'asc'">
			order by amount asc
		</if>
		<if test="query.amountOp == 'desc'">
			order by amount desc
		</if>
		<if test="page != null">
			LIMIT #{page.startRow},#{page.pageSize}
		</if>
	</select>
	<select id="generalOrder" parameterType="costumetrade.report.domain.GeneralReportQuery" resultMap="GeneralResultMap">
	SELECT 
		  SUM(
		    CASE
		      WHEN sto.buyerStoreId = #{storeId} and sto.orderStatus=5
		      THEN sto.realcost 
		      ELSE 0 
		    END
		  ) AS purchaseAmount,
		  SUM(
		    CASE
		      WHEN sto.buyerStoreId = #{storeId} and sto.orderStatus=5
		      THEN sto.totalNum 
		      ELSE 0 
		    END
		  ) AS puchaseCount,
		  SUM(
		    CASE
		      WHEN sto.buyerStoreId = #{storeId} AND sto.orderStatus=7
		      THEN sto.payCost1+ sto.payCost2
		      when sto.sellerStoreId =#{storeId} and sto.orderStatus=5
		      then sto.debetAmt
		      ELSE 0 
		    END
		  ) AS noPayAmount,
		  SUM(
		    CASE
		      WHEN sto.buyerStoreId = #{storeId} AND sto.orderStatus=7
		      THEN sto.debetAmt
		      WHEN sto.sellerStoreId = #{storeId} AND sto.orderStatus=5
		      THEN sto.payCost1+ sto.payCost2
		      ELSE 0 
		    END
		  ) AS noReciptAmount,
		  SUM(
		    CASE
		      WHEN sto.buyerStoreId = #{storeId} AND sto.orderStatus=5
		      THEN 1 
		      ELSE 0 
		    END
		  ) AS puchaseOrderCount,
		  SUM(
		    CASE
		      WHEN sto.sellerStoreId = #{storeId} AND sto.orderStatus=5
		      THEN sto.realcost 
		      ELSE 0 
		    END
		  ) AS saleAmount,
		   SUM(
		    CASE
		      WHEN sto.sellerStoreId = #{storeId} and sto.orderStatus=5
		      THEN sto.totalNum 
		      ELSE 0 
		    END
		  ) AS saleCount,
		  SUM(
		    CASE
		      WHEN sto.sellerStoreId = #{storeId} AND sto.orderStatus=5
		      THEN 1 
		      ELSE 0 
		    END
		  ) AS saleOrderCount 
		FROM
		  ss_stoorder sto 
		WHERE 1 = 1 
  		AND sto.orderTime &gt;=str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;=str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
	</select>
	
	<select id="generalClient" parameterType="costumetrade.report.domain.GeneralReportQuery" resultMap="GeneralResultMap">
		SELECT 
		  (CASE WHEN SUM(
		    CASE
		      WHEN pay.billType = 1 
		      OR pay.billType = 3 
		      THEN pay.payAmt 
		      
		      ELSE 0 
		    END
		  ) IS NULL THEN 0 ELSE SUM(
		    CASE
		      WHEN pay.billType = 1 
		      OR pay.billType = 3 
		      THEN pay.payAmt 
		      
		      ELSE 0 
		    END
		  )END) AS reciptAmount,
		  SUM(
		    CASE
		      WHEN pay.billType = 2 
		      OR pay.billType = 4 
		      THEN pay.payAmt 
		      when pay.billType is null
		      then 0
		      ELSE 0 
		    END
		  ) AS payAmount,
		  SUM(
		    CASE
		      WHEN pay.billType = 1 
		      OR pay.billType = 3 
		      OR pay.billType = 2 
		      OR pay.billType = 4 
		      THEN 1 
		      when pay.billType is null
		      then 0
		      ELSE 0 
		    END
		  ) AS clientOrderCount ,
		  pay.payType as payCate
		FROM
		  ss_payment pay 
		WHERE 1 = 1 
		 and pay.storeId = #{storeId}
		 AND pay.payTime &gt;=str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND pay.payTime &lt;=str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		 <if test="groupByTag !=null">
			GROUP BY pay.payType
		</if>
	</select>
	<select id="generalFee" parameterType="costumetrade.report.domain.GeneralReportQuery" resultMap="GeneralResultMap">
	SELECT 
	  (CASE WHEN SUM(
	    CASE
	      WHEN cgs.payCost IS NOT NULL 
	      THEN cgs.payCost 
	      ELSE 0 
	    END
	  ) IS NULL THEN 0 ELSE SUM(
	    CASE
	      WHEN cgs.payCost IS NOT NULL 
	      THEN cgs.payCost 
	      ELSE 0 
	    END
	  )end ) AS feeAmount ,
	  cgs.payCate
	FROM
	  ss_cgsorder cgs 
	WHERE 1=1
	and cgs.storeId = #{storeId} 
	and cgs.payCost IS NOT NULL 
	AND cgs.order_time &gt;=str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
	AND cgs.order_time &lt;=str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
	<if test="groupByTag !=null">
	GROUP BY cgs.payCate
	</if>
	</select>
	<select id="generalPayType1" parameterType="costumetrade.report.domain.GeneralReportQuery" resultMap="GeneralResultMap">
		SELECT 
		  SUM(
		    CASE
		      WHEN sto.buyerStoreId = #{storeId} AND sto.orderStatus=5
		      THEN sto.payCost1 
		      ELSE 0 
		    END
		  ) AS payAmount,
		  SUM(
		    CASE
		      WHEN sto.sellerStoreId =#{storeId} AND sto.orderStatus=5
		      THEN sto.payCost1 
		      ELSE 0 
		    END
		  ) AS reciptAmount,
		(case when  sto.payCate1 is null then "" else sto.payCate1 end) as payCate
		FROM
		  ss_stoorder sto 
		WHERE 1 = 1 
		AND sto.orderTime &gt;=str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;=str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		GROUP BY sto.payCate1
	</select>
	<select id="generalPayType2" parameterType="costumetrade.report.domain.GeneralReportQuery" resultMap="GeneralResultMap">
		SELECT 
		  SUM(
		    CASE
		      WHEN sto.buyerStoreId = #{storeId} AND sto.orderStatus=5
		      THEN sto.payCost1 
		      ELSE 0 
		    END
		  ) AS payAmount,
		  SUM(
		    CASE
		      WHEN sto.sellerStoreId =#{storeId} AND sto.orderStatus=5
		      THEN sto.payCost1 
		      ELSE 0 
		    END
		  ) AS reciptAmount,
		 sto.payCate2 as payCate
		FROM
		  ss_stoorder sto 
		WHERE 1 = 1 
		AND sto.orderTime &gt;=str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;=str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		GROUP BY sto.payCate2
		</select>
	<select id="saleSortReport"   resultMap="SaleResultMap1">
		SELECT 
		  SUM(detail.count) AS quantity,
		  SUM(CASE WHEN sto.sellerStoreId = #{query.storeId} THEN price.custPrice * detail.count ELSE 0 END) AS pucharseAmount,
		  SUM(CASE WHEN sto.sellerStoreId = #{query.storeId} THEN detail.price * detail.count ELSE 0 END) AS saleAmount,
		  detail.productId,
		  detail.productName AS productName,
		  detail.productColor AS productColor,
		  detail.productSize AS productSize,
		  brand.brandName AS brandName,
		  grade.dict_text AS gradeName,
		  employee.reallyName AS createBy,
		  cli.clientName
		
		FROM
		  ss_stodetail detail 
		  LEFT JOIN ss_stoorder sto 
		    ON sto.payOrderNo = detail.orderId 
		  LEFT JOIN sp_product product 
		    ON product.id = detail.productId AND product.storeId = #{query.storeId} 
		  LEFT JOIN sp_pbrand brand 
		    ON brand.id = product.brandId 
		    AND brand.storeId = #{query.storeId} 
		  LEFT JOIN ss_data_dictionary grade 
		    ON grade.dict_group = 'PRODUCT_GRADE' 
		    AND grade.storeId = #{query.storeId} 
		    AND grade.dict_value = product.grade 
		  LEFT JOIN sp_employee employee ON employee.id = sto.operator
		  LEFT JOIN ss_pprice price ON
		price.productId = product.id AND price.storeId = product.storeId and price.productId = detail.productId
			LEFT JOIN 
	    (SELECT 
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON (
	          chat.userId = sto.buyerStoreId 
	          OR chat.storeId = sto.buyerStoreId
	        ) 
	        AND (
	           sto.buyerStoreId <![CDATA[ <> ]]> "" 
	          AND sto.buyerStoreId IS NOT NULL
	        ) 
	      LEFT JOIN sp_client c 
	        ON sto.sellerStoreId = c.storeId 
	        AND c.openid = chat.openId 
	    WHERE 1 = 1 
	      AND sto.sellerStoreId = #{query.storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		  where 1=1
		  AND sto.orderStatus = 5 
		  AND sto.orderTime &gt;=str_to_date(#{query.timeFrom},'%Y-%m-%d %H:%i:%s')
		  AND sto.orderTime &lt;=str_to_date(#{query.timeTo},'%Y-%m-%d %H:%i:%s')
		  AND sto.sellerStoreId = #{query.storeId}	
		 
		<if test="query.filter.value !=null">
			and ${query.filter.field} = #{query.filter.value}
		</if>
		group by ${query.filter.field}
	    <if test="query.quantityOp == 'asc'">
			order by quantity asc
		</if>
		<if test="query.quantityOp == 'desc'">
			order by quantity desc
		</if>
		<if test="query.amountOp == 'asc'">
			order by saleAmount asc
		</if>
		<if test="query.amountOp == 'desc'">
			order by saleAmount desc
		</if>
		<if test="page != null">
			LIMIT #{page.startRow},#{page.pageSize}
		</if>
	</select>
	<select id="profitAnalysis" resultMap="SaleResultMap1">
	SELECT
		sum(detail.count) as quantity,
		SUM(detail.price*detail.count) AS saleAmount,
		SUM(price.custPrice*detail.count) AS pucharseAmount,
		detail.productId,
		detail.productName as productName,
		detail.productColor as productColor,
		detail.productSize as productSize,
		brand.brandName as brandName,
		grade.dict_text as gradeName,
		sto.operator as createBy,
		cli.clientName
		FROM
		ss_stodetail detail
		LEFT JOIN ss_stoorder sto 
		ON sto.payOrderNo = detail.orderId
		left join sp_product product
		on product.id=detail.productId and product.storeId = #{storeId}
		left join sp_pbrand brand
		on brand.id =product.brandId and brand.storeId=#{storeId}
		left join
		ss_data_dictionary grade
		on grade.dict_group='PRODUCT_GRADE'
		and grade.storeId=#{storeId} and grade.dict_value = product.grade
		LEFT JOIN ss_pprice price ON
		price.productId = product.id AND price.storeId = product.storeId and price.productId = detail.productId
		LEFT JOIN 
	    (SELECT 
	      MAX(c.create_time),
	      (
	        CASE
	          WHEN c.remarkName IS NOT NULL 
	          THEN c.remarkName 
	          WHEN c.reallyName IS NOT NULL 
	          THEN c.reallyName 
	          WHEN c.nickName IS NOT NULL 
	          THEN c.nickName 
	          ELSE c.nickName 
	        END
	      ) AS clientName,
	      sto.payOrderNo 
	    FROM
	      ss_stoorder sto 
	      LEFT JOIN sc_wechat_bind chat 
	        ON (
	          chat.userId = sto.buyerStoreId 
	          OR chat.storeId = sto.buyerStoreId
	        ) 
	        AND (
	           sto.buyerStoreId <![CDATA[ <> ]]> "" 
	          AND sto.buyerStoreId IS NOT NULL
	        ) 
	      LEFT JOIN sp_client c 
	        ON sto.sellerStoreId = c.storeId 
	        AND c.openid = chat.openId 
	    WHERE 1 = 1 
	      AND sto.sellerStoreId = #{storeId}
	      AND sto.orderStatus = 5) cli ON cli.payOrderNo = sto.payOrderNo
		where 1=1
		and sto.sellerStoreId=#{storeId}
		AND sto.orderTime &gt;=str_to_date(#{timeFrom},'%Y-%m-%d %H:%i:%s')
		AND sto.orderTime &lt;=str_to_date(#{timeTo},'%Y-%m-%d %H:%i:%s')
		<if test="filter.value !=null">
			and ${filter.field} =#{filter.value}=
		</if>
		<if test="filter.field !=null">
		group by ${filter.field}
		</if>
	    order by saleAmount desc
	
	</select>
</mapper>